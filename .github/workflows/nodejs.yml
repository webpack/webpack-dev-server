name: webpack-dev-server

on:
  push:
    branches:
      - master
      - next
      - v4
  pull_request:
    branches:
      - master
      - next
      - v4

permissions:
  contents: read

jobs:
  lint:
    name: Lint - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build types
        run: npm run build:types

      - name: Check types
        run: if [ -n "$(git status types --porcelain)" ]; then echo "Missing types. Update types by running 'npm run build:types'"; exit 1; else echo "All types are valid"; fi

      - name: Security audit
        run: npm audit --production

      - name: Check commit message
        uses: wagoid/commitlint-github-action@v4

  test:
    name: Test - ${{ matrix.os }} - Node v${{ matrix.node-version }}, Webpack ${{ matrix.webpack-version }} (${{ matrix.shard }})

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [12.x, 14.x, 16.x, 18.x, 19.x]
        shard: ["1/4", "2/4", "3/4", "4/4"]
        webpack-version: [latest]
        include:
          - node-version: 16.x
            os: ubuntu-latest
            webpack-version: 4

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Update package.json for webpack@4
        if: matrix.webpack-version == '4'
        run: echo "`jq '.scripts.build="npm run build:client"' package.json`" > package.json

      - name: Install webpack ${{ matrix.webpack-version }}
        if: matrix.webpack-version == '4'
        run: npm i webpack@${{ matrix.webpack-version }} --save-dev --ignore-scripts

      - name: Setup firefox
        if: matrix.os != 'windows-latest'
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: latest

      - name: Link webpack-dev-server
        run: |
          cp -R client tmp-client
          npm link --ignore-scripts
          npm link webpack-dev-server --ignore-scripts
          rm -r client
          cp -R tmp-client client

      - name: Run tests for webpack version ${{ matrix.webpack-version }}
        run: npm run test:coverage -- --ci --shard=${{ matrix.shard }}

      - name: Submit coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
