name: webpack-dev-server

on:
  push:
    branches:
      - master
      - next
      - v4
  pull_request:
    branches:
      - master
      - next
      - v4

permissions:
  contents: read

jobs:
  lint:
    name: Lint - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: lint-${{ matrix.os }}-v${{ matrix.node-version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build types
        run: npm run build:types

      - name: Check types
        run: if [ -n "$(git status types --porcelain)" ]; then echo "Missing types. Update types by running 'npm run build:types'"; exit 1; else echo "All types are valid"; fi

      - name: Security audit
        run: npm audit --production

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  test:
    name: Test - ${{ matrix.os }} - Node v${{ matrix.node-version }}, Webpack ${{ matrix.webpack-version }} (${{ matrix.shard }})

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x, 22.x]
        shard: ["1/4", "2/4", "3/4", "4/4"]
        webpack-version: [latest]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: test-${{ matrix.os }}-v${{ matrix.node-version }}-${{ matrix.webpack-version }}-${{ matrix.shard }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Support long paths
        if: matrix.os == 'windows-latest'
        run: git config --system core.longpaths true

      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install dependencies for Node.js@18
        run: |
          npm i p-retry@^4.5.0 open@^8.0.9
          node ./scripts/prepare-test-for-old-node.js
        if: matrix.node-version == '18.x'

      - name: Link webpack-dev-server
        run: |
          cp -R client tmp-client
          npm link --ignore-scripts || true
          npm link webpack-dev-server --ignore-scripts || true
          rm -r client
          cp -R tmp-client client

      - name: Run tests for webpack version ${{ matrix.webpack-version }}
        run: node_modules/.bin/jest --coverage --ci --shard=${{ matrix.shard }}
        if: matrix.node-version == '18.x'

      - name: Run tests for webpack version ${{ matrix.webpack-version }}
        run: npm run test:coverage -- --ci --shard=${{ matrix.shard }}
        if: matrix.node-version != '18.x'

      - name: Install Playwright browsers and dependencies
        run: npx playwright install --with-deps

      - name: Run E2E tests for webpack version ${{ matrix.webpack-version }}
        run: npm run test:e2e -- --shard=${{ matrix.shard }}

      - name: Submit coverage data to codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
