// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`watchFiles option should not crash if wile doesn't exist should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should not crash if wile doesn't exist should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should not crash if wile doesn't exist should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with array config should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with array config should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with array config should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with object with multiple paths should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with object with multiple paths should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with object with multiple paths should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with object with single path should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with object with single path should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with object with single path should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 400,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"poll":200} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"poll":200} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"poll":200} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"poll":200} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"poll":true} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"poll":true} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"poll":true} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"poll":true} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":false} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":true} should handle GET request to bundle file 1`] = `
Object {
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"usePolling":true} should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":true} should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with options {"usePolling":true} should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with string and glob should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with string and glob should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with string and glob should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with string and path to directory should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with string and path to directory should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with string and path to directory should handle GET request to bundle file: response status 1`] = `200`;

exports[`watchFiles option should work with string and path to file should handle GET request to bundle file: console messages 1`] = `Array []`;

exports[`watchFiles option should work with string and path to file should handle GET request to bundle file: page errors 1`] = `Array []`;

exports[`watchFiles option should work with string and path to file should handle GET request to bundle file: response status 1`] = `200`;
