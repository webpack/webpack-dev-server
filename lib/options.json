{
  "type": "object",
  "definitions": {
    "StaticObject": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "directory": {
          "type": "string",
          "minLength": 1,
          "description": "Directory for static contents."
        },
        "staticOptions": {
          "type": "object",
          "additionalProperties": true
        },
        "publicPath": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "minItems": 1
            },
            {
              "type": "string",
              "minLength": 1
            }
          ],
          "description": "The bundled files will be available in the browser under this path."
        },
        "serveIndex": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "additionalProperties": true
            }
          ],
          "description": "Tells dev-server to use serveIndex middleware when enabled."
        },
        "watch": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "description": "options for watch, description available at https://github.com/paulmillr/chokidar#api"
            }
          ],
          "description": "Watch for files in static content directory."
        }
      }
    },
    "StaticString": {
      "type": "string",
      "minLength": 1
    },
    "OpenBoolean": {
      "type": "boolean"
    },
    "OpenString": {
      "type": "string",
      "minLength": 1
    },
    "OpenObject": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "target": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "minItems": 1
            },
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "minLength": 1
            }
          ],
          "description": "Open specified route in browser."
        },
        "app": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 1
                      },
                      "minItems": 1
                    },
                    {
                      "type": "string",
                      "minLength": 1
                    }
                  ]
                },
                "arguments": {
                  "items": {
                    "type": "string",
                    "minLength": 1
                  },
                  "minItems": 1
                }
              }
            },
            {
              "type": "string",
              "minLength": 1
            }
          ],
          "description": "Open specified browser."
        }
      }
    },
    "WatchFilesString": {
      "type": "string",
      "minLength": 1
    },
    "WatchFilesObject": {
      "type": "object",
      "properties": {
        "paths": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        },
        "options": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "WebSocketServerEnum": {
      "enum": ["sockjs", "ws"]
    },
    "WebSocketServerString": {
      "type": "string",
      "minLength": 1
    },
    "WebSocketServerFunction": {
      "instanceof": "Function"
    },
    "WebSocketServerObject": {
      "type": "object",
      "properties": {
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebSocketServerEnum"
            },
            {
              "$ref": "#/definitions/WebSocketServerString"
            },
            {
              "$ref": "#/definitions/WebSocketServerFunction"
            }
          ]
        },
        "options": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ClientTransportEnum": {
      "enum": ["sockjs", "ws"]
    },
    "ClientTransportString": {
      "type": "string",
      "minLength": 1
    }
  },
  "properties": {
    "bonjour": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "description": "Options for bonjour, description available at https://github.com/watson/bonjour#initializing"
        }
      ],
      "description": "Broadcasts the server via ZeroConf networking on start. https://webpack.js.org/configuration/dev-server/#devserverbonjour"
    },
    "client": {
      "type": "object",
      "properties": {
        "transport": {
          "anyOf": [
            {
              "$ref": "#/definitions/ClientTransportEnum"
            },
            {
              "$ref": "#/definitions/ClientTransportString"
            }
          ],
          "description": "Allows to set custom transport to communicate with server."
        },
        "logging": {
          "enum": ["none", "error", "warn", "info", "log", "verbose"],
          "decription": "Log level in the browser."
        },
        "progress": {
          "type": "boolean",
          "description": "Print compilation progress in percentage in the browser."
        },
        "overlay": {
          "anyOf": [
            {
              "type": "boolean",
              "description": "Show a full-screen overlay in the browser when there are compiler errors or warnings."
            },
            {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "boolean",
                  "description": "Show a full-screen overlay in the browser when there are compiler errors."
                },
                "warnings": {
                  "type": "boolean",
                  "description": "Show a full-screen overlay in the browser when there are compiler warnings."
                }
              }
            }
          ]
        },
        "needClientEntry": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "instanceof": "Function"
            }
          ],
          "description": "Tells devServer to inject a client entry."
        },
        "hotEntry": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "instanceof": "Function"
            }
          ],
          "description": "Tells devServer to inject a Hot Module Replacement entry."
        },
        "webSocketURL": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "protocol": {
                  "anyOf": [
                    {
                      "enum": ["auto"]
                    },
                    {
                      "type": "string",
                      "minLength": 1
                    }
                  ],
                  "description": "Tells clients connected to devServer to use the provided protocol."
                },
                "host": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Tells clients connected to devServer to use the provided host."
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string",
                      "minLength": 1
                    }
                  ],
                  "description": "Tells clients connected to devServer to use the provided port."
                },
                "path": {
                  "type": "string",
                  "description": "Tells clients connected to devServer to use the provided path to connect."
                }
              }
            }
          ],
          "description": "When using dev server and you're proxying dev-server, the client script does not always know where to connect to."
        }
      },
      "description": "Specifies client properties. https://webpack.js.org/configuration/dev-server/#devserverclient",
      "additionalProperties": false
    },
    "webSocketServer": {
      "anyOf": [
        {
          "$ref": "#/definitions/WebSocketServerEnum"
        },
        {
          "$ref": "#/definitions/WebSocketServerString"
        },
        {
          "$ref": "#/definitions/WebSocketServerFunction"
        },
        {
          "$ref": "#/definitions/WebSocketServerObject"
        }
      ],
      "description": "Allows to set web socket server and options."
    },
    "compress": {
      "type": "boolean",
      "description": "Enable gzip compression for everything served. https://webpack.js.org/configuration/dev-server/#devservercompress"
    },
    "devMiddleware": {
      "type": "object",
      "description": "Provide options to webpack-dev-middleware which handles webpack assets. https://webpack.js.org/configuration/dev-server/#devserverdevmiddleware"
    },
    "allowedHosts": {
      "anyOf": [
        {
          "enum": ["auto", "all"]
        },
        {
          "type": "string",
          "minLength": 1
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 1
        }
      ],
      "description": "Defines routes which are enabled by default, on by default and allows localhost/value from the 'host' option/value from the 'client.webSocketURL' option. https://webpack.js.org/configuration/dev-server/#devserverallowedhosts"
    },
    "headers": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "instanceof": "Function"
        }
      ],
      "description": "Adds headers to all responses. https://webpack.js.org/configuration/dev-server/#devserverheaders"
    },
    "historyApiFallback": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "description": "Options for `historyApiFallback`, description available at https://github.com/bripkens/connect-history-api-fallback#options"
        }
      ],
      "description": "When using the HTML5 History API, the index.html page will likely have to be served in place of any 404 responses. https://webpack.js.org/configuration/dev-server/#devserverhistoryapifallback"
    },
    "host": {
      "type": "string",
      "minLength": 1,
      "description": "Specify a host to use. If you want your server to be accessible externally. https://webpack.js.org/configuration/dev-server/#devserverhost"
    },
    "hot": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "enum": ["only"]
        }
      ],
      "description": "Enable webpack's Hot Module Replacement feature. https://webpack.js.org/configuration/dev-server/#devserverhot"
    },
    "http2": {
      "type": "boolean",
      "description": "Serve over HTTP/2 using spdy. https://webpack.js.org/configuration/dev-server/#devserverhttp2"
    },
    "https": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "passphrase": {
              "type": "string",
              "description": "Passphrase for a pfx file."
            },
            "requestCert": {
              "type": "boolean",
              "description": "Request for an SSL certificate."
            },
            "cacert": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to an SSL CA certificate."
            },
            "key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to an SSL key."
            },
            "pfx": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to an SSL pfx file."
            },
            "cert": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to an SSL certificate."
            }
          }
        }
      ],
      "description": "By default, dev-server will be served over HTTP. It can optionally be served over HTTP/2 with HTTPS. https://webpack.js.org/configuration/dev-server/#devserverhttps"
    },
    "liveReload": {
      "type": "boolean",
      "description": "By default, the dev-server will reload/refresh the page when file changes are detected. https://webpack.js.org/configuration/dev-server/#devserverlivereload"
    },
    "onAfterSetupMiddleware": {
      "instanceof": "Function",
      "description": "Provides the ability to execute custom middleware after all other middleware internally within the server. https://webpack.js.org/configuration/dev-server/#devserverafter"
    },
    "onBeforeSetupMiddleware": {
      "instanceof": "Function",
      "description": "Provides the ability to execute custom middleware prior to all other middleware internally within the server. https://webpack.js.org/configuration/dev-server/#devserverbefore"
    },
    "onListening": {
      "instanceof": "Function",
      "description": "Provides an option to execute a custom function when webpack-dev-server starts listening for connections on a port. https://webpack.js.org/configuration/dev-server/#onlistening"
    },
    "open": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenString"
              },
              {
                "$ref": "#/definitions/OpenObject"
              }
            ]
          },
          "minItems": 1
        },
        {
          "$ref": "#/definitions/OpenBoolean"
        },
        {
          "$ref": "#/definitions/OpenString"
        },
        {
          "$ref": "#/definitions/OpenObject"
        }
      ],
      "description": "Tells dev-server to open the browser after server had been started. Set it to true to open your default browser. https://webpack.js.org/configuration/dev-server/#devserveropen"
    },
    "port": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "string",
          "minLength": 1
        },
        {
          "enum": ["auto"]
        }
      ],
      "description": "Specify a port number to listen for requests on. https://webpack.js.org/configuration/dev-server/#devserverport"
    },
    "proxy": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "instanceof": "Function"
              }
            ]
          },
          "minItems": 1
        }
      ],
      "description": "Proxying some URLs can be useful when you have a separate API backend development server and you want to send API requests on the same domain. https://webpack.js.org/configuration/dev-server/#devserverproxy"
    },
    "setupExitSignals": {
      "type": "boolean",
      "description": "It takes a boolean and if true (default on CLI), the server will close and exit the process on SIGINT and SIGTERM. https://webpack.js.org/configuration/dev-server/#devserversetupexitsignals"
    },
    "static": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/StaticString"
              },
              {
                "$ref": "#/definitions/StaticObject"
              }
            ]
          },
          "minItems": 1
        },
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/StaticString"
        },
        {
          "$ref": "#/definitions/StaticObject"
        }
      ],
      "description": "It is possible to configure advanced options for serving static files from directory. See the Express documentation for the possible options. https://webpack.js.org/configuration/dev-server/#devserverstatic"
    },
    "watchFiles": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/WatchFilesString"
              },
              {
                "$ref": "#/definitions/WatchFilesObject"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/WatchFilesString"
        },
        {
          "$ref": "#/definitions/WatchFilesObject"
        }
      ],
      "description": "List of files to watch for file changes and serve. https://webpack.js.org/configuration/dev-server/#devserverwatchfiles"
    }
  },
  "additionalProperties": false
}
